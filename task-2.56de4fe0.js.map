{"mappings":"AACA,MAAMA,EAAQ,CACb,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGlBC,EAAkB,CAACC,EAAUC,IAE3B,IAAIC,SAASC,IAKnBA,EAHqBH,EAASI,KAAIC,GACjCA,EAAKR,OAASI,EAAW,IAAKI,EAAMP,QAASO,EAAKP,QAAWO,IAEzC,IAKjBC,EAASC,GAAgBC,QAAQC,MAAMF,GAI7CR,EAAgBH,EAAO,SAASc,KAAKJ,GACrCP,EAAgBH,EAAO,OAAOc,KAAKJ","sources":["src/task-2.js"],"sourcesContent":["\nconst users = [\n\t{ name: 'Mango', active: true },\n\t{ name: 'Poly', active: false },\n\t{ name: 'Ajax', active: true },\n\t{ name: 'Lux', active: false },\n];\n\nconst toggleUserState = (allUsers, userName) => {\n\n\treturn new Promise((resolve) => {\n\n\t\tconst updatedUsers = allUsers.map(user =>\n\t\t\tuser.name === userName ? { ...user, active: !user.active } : user,\n\t\t);\n\t\tresolve(updatedUsers)\n\t})\n};\n\n\nconst logger = updatedUsers => console.table(updatedUsers);\n\n\n\ntoggleUserState(users, 'Mango').then(logger);\ntoggleUserState(users, 'Lux').then(logger);"],"names":["$40a8bd1a82f3f1eb$var$users","name","active","$40a8bd1a82f3f1eb$var$toggleUserState","allUsers","userName","Promise","resolve","map","user","$40a8bd1a82f3f1eb$var$logger","updatedUsers","console","table","then"],"version":3,"file":"task-2.56de4fe0.js.map"}