{"mappings":"AAKwB,CAACA,IACxB,MAAMC,GAL4BC,EAKM,IALDC,EAKM,IAJtCC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IADnB,IAACA,EAAKC,EAMvC,OAAO,IAAII,SAAQ,CAACC,EAASC,KAE5BC,YAAW,KACSN,KAAKE,SAAW,GAIlCE,EAAQ,CAAEG,IAAKX,EAAYY,GAAIX,MAAOA,IAEtCQ,EAAOT,EAAYY,GAAG,GAErBX,EAAM,GACR,EAgBHY,CAAgB,CAAED,GAAI,GAAIE,OAAQ,MAAOC,MAZzC,SAAoBH,GAEnBI,QAAQC,IAAI,eAAeL,EAAGD,oBAAoBC,EAAGX,U,IAUIiB,OAPzCN,IAChBI,QAAQG,KAAK,gCAAgCP,6BAA8B","sources":["src/task-3.js"],"sourcesContent":["\nconst randomIntegerFromInterval = (min, max) => {\n\treturn Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = (transaction) => {\n\tconst delay = randomIntegerFromInterval(200, 500);\n\treturn new Promise((resolve, reject) => {\n\n\t\tsetTimeout(() => {\n\t\t\tconst canProcess = Math.random() > 0.3;\n\n\t\t\tif (canProcess) {\n\n\t\t\t\tresolve({ one: transaction.id, delay: delay });\n\t\t\t} else {\n\t\t\t\treject(transaction.id);\n\t\t\t}\n\t\t}, delay);\n\t})\n\n};\n\nfunction logSuccess(id) {\n\n\tconsole.log(`Transaction ${id.one} processed in ${id.delay}ms`);\n};\n\nconst logError = id => {\n\tconsole.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n\n\n\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError)\n\n// makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\n// makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\n// makeTransaction({ id: 73, amount: 100 }, logSuccess, logError)"],"names":["transaction","delay","min","max","Math","floor","random","Promise","resolve","reject","setTimeout","one","id","$40e8fb9c68f2edc2$var$makeTransaction","amount","then","console","log","catch","warn"],"version":3,"file":"task-3.2d8c4942.js.map"}