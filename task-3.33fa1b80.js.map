{"mappings":"YA4BA,IAvByBA,EAJUC,EAAKC,EAKjCC,GADkBH,EA8BT,CAAEI,GAAI,GAAIC,OAAQ,KAlCCJ,EAKM,IALDC,EAKM,IAAvCC,EAJCG,KAAKC,MAAMD,KAAKE,UAAYN,EAAMD,EAAM,GAAKA,GAK7C,IAAIQ,SAAQ,SAACC,EAASC,GAE5BC,YAAW,WACSN,KAAKE,SAAW,GAIlCE,EAAQ,CAAEG,IAAKb,EAAYI,GAAID,MAAOA,IAEtCQ,EAAOX,EAAYI,G,GAElBD,E,KAiBoCW,MAZzC,SAAoBV,GAEnBW,QAAQC,IAAI,eAAsCC,OAAvBb,EAAGS,IAAI,kBAAyBI,OAATb,EAAGD,MAAM,M,IAUFe,OAPzC,SAAAd,GAChBW,QAAQI,KAAK,gCAAmCF,OAAHb,EAAG,6B","sources":["src/task-3.js"],"sourcesContent":["\nconst randomIntegerFromInterval = (min, max) => {\n\treturn Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = (transaction) => {\n\tconst delay = randomIntegerFromInterval(200, 500);\n\treturn new Promise((resolve, reject) => {\n\n\t\tsetTimeout(() => {\n\t\t\tconst canProcess = Math.random() > 0.3;\n\n\t\t\tif (canProcess) {\n\n\t\t\t\tresolve({ one: transaction.id, delay: delay });\n\t\t\t} else {\n\t\t\t\treject(transaction.id);\n\t\t\t}\n\t\t}, delay);\n\t})\n\n};\n\nfunction logSuccess(id) {\n\n\tconsole.log(`Transaction ${id.one} processed in ${id.delay}ms`);\n};\n\nconst logError = id => {\n\tconsole.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n\n\n\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError)\n\n// makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\n// makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\n// makeTransaction({ id: 73, amount: 100 }, logSuccess, logError)"],"names":["transaction","min","max","delay","id","amount","Math","floor","random","Promise","resolve","reject","setTimeout","one","then","console","log","concat","catch","warn"],"version":3,"file":"task-3.33fa1b80.js.map"}